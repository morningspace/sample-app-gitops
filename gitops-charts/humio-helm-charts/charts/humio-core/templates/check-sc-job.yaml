---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: check-sc-job
  namespace: {{ default "default" .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1000"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: check-sc-job
  annotations:
    argocd.argoproj.io/sync-wave: "-1000"
rules:
- apiGroups: ["storage.k8s.io"]
  resources:
  - storageclass
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: check-sc-job
  annotations:
    argocd.argoproj.io/sync-wave: "-1000"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: check-sc-job
subjects:
- kind: ServiceAccount
  name: check-sc-job
  namespace: {{ default "default" .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: check-sc
  annotations:
    argocd.argoproj.io/sync-wave: "-900"
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          command:
            - /bin/sh
            - -c
            - |
              set -x

              while : ; do
                if oc get sc -o "jsonpath={.items[*].metadata.annotations['storageclass\.kubernetes\.io/is-default-class']}" | grep -q ^true$; then
                  echo "INFO: Default storage class available."
                  exit 0
                fi
                echo "INFO: Default storage class not available, waiting."
                sleep 10
              done
      restartPolicy: Never
      serviceAccountName: check-sc-job
  backoffLimit: 10
